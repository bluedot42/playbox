version: "3.8"

services:
  mysql:
    image: mysql:${MYSQL_TAG}
    container_name: ${PROJECT_NAME}-mysqldb
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "toor"
      TZ: 'Asia/Hong_Kong'
    volumes:
     # - ./config/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro #configuration file
      - ${VOL_DIR}mysql:/var/lib/mysql #mysql database files volume mysql
    command: --default-authentication-plugin=mysql_native_password
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  mongodb:
    image: mongo:${MONGODB_TAG}
    container_name: ${PROJECT_NAME}-mongodb
    ports:
      - "27017-27019:27017-27019"
    environment:
      MONGO_INITDB_Database: aars-data
      MONGO_INITDB_ROOT_Username: root
      MONGO_INITDB_ROOT_Password: toor
    volumes:
      #unable to use bind volume on windows 10, switch to docker-managed volume
      - ${VOL_DIR}mongo:/data/db
      #- ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      # - ${VOL_DIR}vol-mongo:/data/db
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  mongo-express:
    image: mongo-express:${MONGOEXPRESS_TAG}
    container_name: ${PROJECT_NAME}-mongodb-admin
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: toor
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_SERVER: ${PROJECT_NAME}-mongodb

    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      
  redis:
    image: redis:${REDIS_TAG}
    container_name: ${PROJECT_NAME}-redis
    ports:
      - "6379:6379"
    volumes:
      - ${VOL_DIR}redis:/data
      #- $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      
  nginx:
    image: nginx:${NGINX_TAG}
    container_name: ${PROJECT_NAME}-nginx
    ports:
      - "8000:80"
      - "443"
    volumes:
      - ${VOL_DIR}nginx-log:/var/log/nginx/
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    #volumes:
      #- ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default
      #- ./docker/nginx/nginx.conf:/etc/nginx/sites-available/default
      #- vol-nginx:?
      
  rabbitmq:
    image: rabbitmq:${RABBITMQ_TAG}
    container_name: ${PROJECT_NAME}-rabbitmq
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - ${VOL_DIR}rabbitmq-log:/var/log/rabbitmq/
      - ${VOL_DIR}rabbitmq-data:/var/lib/rabbitmq/mnesia/
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    

# TODO: on windows 10, unable to mount named volumes
# volumes:
  # vol-mysql:
  # vol-mongo:
  # vol-redis:
  # vol-nginx-log:
  # vol-rabbitmq-log:
  # vol-rabbitmq-data:
#   vol-mysql:
#     driver_opts: 
#       device: "${VOL_DIR}vol-mysql"
#       type: "none"
#   vol-mongo:
#     driver_opts: 
#       device: "${VOL_DIR}vol-mongo"
#       type: "none"
#   vol-redis:
#     driver_opts: 
#       device: "${VOL_DIR}vol-redis"
#       type: "none"
#   vol-rabbitmq:
#     driver_opts: 
#       device: "${VOL_DIR}vol-rabbitmq"
#       type: "none"
#   vol-rabbitmq-log:
#     driver_opts: 
#       device: "${VOL_DIR}vol-rabbitmq-log"
#       type: "none"